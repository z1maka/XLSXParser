{"version":3,"sources":["img/server.png","img/bounce.png","newSheat.js","App.js","index.js"],"names":["module","exports","_DATA","notFoundIP","NewSheet","state","filterValue","data","sort","repeatIp","showContent","map","invoice","index","key","server","className","marked","name","coast","handleChange","e","_data","filter","ip","includes","target","value","setState","showRepitedInvoice","i","src","alt","showNotFound","handleSortClick","props","ips","sheet","item","push","a","b","showRepitedSheet","repited","this","repeatingIps","length","htmlFor","onChange","id","placeholder","type","onClick","React","Component","App","invoiceIps","sheets","error","loading","event","files","parceInvice","file","reader","FileReader","readAsArrayBuffer","onload","workbook","xl","read","result","SheetNames","invoiceSheet","Sheets","sheetValues","utils","sheet_to_json","header","indexOf","split","parceSheet","names","sheetsValues","f","handleSubmit","preventDefault","InputField","label","style","display","multiple","bounce","css","margin","borderColor","sizeUnit","size","color","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a647d885.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/server.743fdc7d.png\";","module.exports = __webpack_public_path__ + \"static/media/bounce.781f2637.png\";","import React from 'react'\r\nimport server from './img/server.png'\r\n\r\n\r\nconst _DATA = [];\r\nconst notFoundIP = [];\r\nexport default class NewSheet extends React.Component {\r\n    state = {\r\n        filterValue: '',\r\n        data: [],\r\n        notFoundIP: [],\r\n        sort: false,\r\n        repeatIp: [],\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const invoices =  this.props.invoice.ips\r\n        invoices.map(ip=>{\r\n            if (this.props.sheet[ip]){\r\n                const item = {\r\n                    server: ip,\r\n                    name: this.props.sheet[ip].name  ? this.props.sheet[ip].name : null,\r\n                    coast: this.props.sheet[ip].coast  ? this.props.sheet[ip].coast : null,\r\n                    marked: this.props.repited.includes(ip)\r\n                }\r\n                _DATA.push(item)\r\n            }\r\n            if (!this.props.sheet[ip] && !this.props.repited.includes(ip)){\r\n                notFoundIP.push(ip)\r\n            }\r\n        })\r\n        this.setState({data: _DATA, notFoundIP, repeatIp : this.props.invoice.repeatingIps})\r\n    }\r\n\r\n\r\n    showContent = () => {\r\n        return this.state.data.map((invoice, index) => {\r\n            return (\r\n                <div key={invoice.server} className={`sheet-item${invoice.marked ? ' marked' : ''}`}>\r\n                    <div className='sheet-server'>\r\n                        <p className='index'>{`${index+1}`}</p>\r\n                        <p className='sheet-server-value'>{invoice.server}</p>\r\n                    </div>\r\n                    <div className='sheet-server-name'>\r\n                        <p className='sheet-server-value'>{invoice.name}</p>\r\n                    </div>\r\n                    <div className='sheet-server-name'>\r\n                        <p className='sheet-server-value'>{\r\n                            invoice.coast ? invoice.coast : 'Not found'\r\n                        }</p>\r\n                    </div>\r\n                    {invoice.marked && <div className='sheet-server-name'><p className='sheet-server-value'>Repited</p></div>}\r\n                </div>\r\n            )\r\n        })\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        const _data = _DATA.filter(ip => {\r\n            return ip.server.includes(e.target.value)\r\n        });\r\n        this.setState({\r\n            data: _data\r\n        })\r\n    };\r\n\r\n    showRepitedInvoice = () => {\r\n        return this.state.repeatIp.map((invoice, i) => {\r\n            return (\r\n                <div key={i} className='sheet-item'>\r\n                    <div className='sheet-server'>\r\n                        <img className='sheet-server-img' src={server} alt=\"icon\"/>\r\n                        <p className='sheet-server-value'>{invoice}</p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    showNotFound = () => {\r\n        return this.state.notFoundIP.map((invoice, i) => {\r\n            return (\r\n                <div key={i} className='sheet-item'>\r\n                    <div className='sheet-server'>\r\n                        <img className='sheet-server-img' src={server} alt=\"icon\"/>\r\n                        <p className='sheet-server-value'>{invoice}</p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    handleSortClick = () =>{\r\n        if (!this.state.sort){\r\n            const _data = _DATA.sort((a, b)=>{\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                return 0\r\n            });\r\n            this.setState({data: _data, sort: true});\r\n        }else{\r\n            const data = [];\r\n            this.props.invoice.ips.map(ip=>{\r\n                if (this.props.sheet[ip]){\r\n                    const item = {\r\n                        server: ip,\r\n                        name: this.props.sheet[ip].name  ? this.props.sheet[ip].name : null,\r\n                        coast: this.props.sheet[ip].coast  ? this.props.sheet[ip].coast : null,\r\n                    }\r\n                    data.push(item)\r\n                }\r\n                this.setState({data, sort: false})\r\n            })\r\n        }\r\n    };\r\n\r\n    showRepitedSheet = () => {\r\n        return this.props.repited.map((ip, i)=>{\r\n            return (\r\n                <div key={i} className='sheet-item'>\r\n                    <div className='sheet-server'>\r\n                        <img className='sheet-server-img' src={server} alt=\"icon\"/>\r\n                        <p className='sheet-server-value'>{ip}</p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const {notFoundIP, repeatIp,  data} = this.state;\r\n        return (\r\n            <div className='container'>\r\n                <h2 className='container-header'>Real Sheet</h2>\r\n                <h4>{`Количество найденных серверов в Табличке ${this.state.data.length}`}</h4>\r\n                {<div className='ipsMenu'>\r\n                    <div className='not-found-ips'>\r\n                        <h2 className='show-repeating'>Repeating IP in Invoice</h2>\r\n                        {repeatIp.length && this.showRepitedInvoice()}\r\n                    </div>\r\n                    <div className='not-found-ips'>\r\n                        <h2 className='show-repeating'>Repeating IP in SHEET</h2>\r\n                        {this.props.repited.length && this.showRepitedSheet()}\r\n                    </div>\r\n                    <div className='not-found-ips'>\r\n                        <h2 className='show-repeating'>Not Found IP from Invoice</h2>\r\n                        {notFoundIP.length && this.showNotFound()}\r\n                    </div>\r\n                </div>}\r\n                <div className='filter-section'>\r\n                    <label className='filter-label' htmlFor='filter'>Filter by IP</label>\r\n                    <input\r\n                        className='fileInput'\r\n                        onChange={this.handleChange}\r\n                        id='filter'\r\n                        placeholder='enter the Ip'\r\n                        type=\"text\"\r\n                    />\r\n                    <button onClick={this.handleSortClick} className='sort'>Sort by Name</button>\r\n                </div>\r\n                <div className='sheet-container'>\r\n                    <h2>Invoices</h2>\r\n                    {data && this.showContent()}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport bounce from './img/bounce.png'\r\nimport xl from 'xlsx';\r\nimport NewSheet from \"./newSheat\";\r\nimport {PulseLoader} from 'react-spinners'\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n        invoice: {\r\n            ips: [],\r\n            repeatingIps: []\r\n        },\r\n        sheet: {},\r\n        invoiceIps: null,\r\n        sheets: null,\r\n        error: null,\r\n        loading: false,\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.files[0]\r\n        })\r\n    };\r\n\r\n    parceInvice = (file) => {\r\n        const ips = [];\r\n        const repeatingIps = [];\r\n        const reader = new FileReader();\r\n        reader.readAsArrayBuffer(file);\r\n        reader.onload = (e) => {\r\n            const workbook = xl.read(e.target.result, {type: \"buffer\"});\r\n            const name = workbook.SheetNames[0];\r\n            const invoiceSheet = workbook.Sheets[name];\r\n            const sheetValues = xl.utils.sheet_to_json(invoiceSheet, {header: 1});\r\n            for (const key in sheetValues) {\r\n                if (sheetValues[key][4] && sheetValues[key][4].indexOf('(') > -1) {\r\n                    const ip = sheetValues[key][4].split('(')[1].split(')')[0];\r\n                    if (ips.includes(ip)) {\r\n                        repeatingIps.push(ip)\r\n                        ips.filter(i => i !== ip);\r\n                    } else {\r\n                        ips.push(ip)\r\n                    }\r\n                }\r\n            }\r\n            this.setState({invoiceIps: {ips, repeatingIps}})\r\n\r\n        };\r\n    };\r\n\r\n    parceSheet = (file) => {\r\n        const ips = {};\r\n        const repeatingIps = [];\r\n        const reader = new FileReader();\r\n        reader.readAsArrayBuffer(file);\r\n        reader.onload = (e) => {\r\n            const workbook = xl.read(e.target.result, {type: \"buffer\"});\r\n            const names = workbook.SheetNames;\r\n            const sheetsValues = [];\r\n            for (const name of names) {\r\n                sheetsValues.push(workbook.Sheets[name])\r\n            }\r\n            const result = []\r\n            for (const sheet of sheetsValues) {\r\n                result.push(xl.utils.sheet_to_json(sheet, {header: 1}));\r\n            }\r\n            for (const key in result) {\r\n                for (const f in result[key]) {\r\n                    if (this.state.invoiceIps.ips.includes(result[key][f][2])){\r\n                        if (ips[result[key][f][2]] && !repeatingIps.includes(result[key][f][2])){\r\n                            repeatingIps.push(result[key][f][2]);\r\n                        }\r\n                        ips[result[key][f][2]] = {coast: result[key][f][8], name: result[key][f][0], marked: repeatingIps.includes(result[key][f][2])};\r\n                    }\r\n\r\n                }\r\n            }\r\n            this.setState({sheets: {ips, repeatingIps} , loading: false})\r\n        }\r\n    };\r\n\r\n\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        this.setState({loading: true});\r\n        const invoiceData = await this.parceInvice(this.state.invoice);\r\n        const sheetData = await this.parceSheet(this.state.sheet);\r\n    };\r\n\r\n    render() {\r\n        const InputField = ({state, label, id, name}) => {\r\n            return (\r\n                <div className='upload-section'>\r\n                    <label className='upload' htmlFor={id}>{label}</label>\r\n                    <input\r\n                        className='fileInput'\r\n                        style={{display: 'none'}}\r\n                        onChange={this.handleChange}\r\n                        id={id}\r\n                        name={name}\r\n                        multiple\r\n                        type=\"file\"\r\n                    />\r\n                    {state.name &&\r\n                    <div className='invoice-description'>\r\n                        <img className='uploadImage' src={bounce} alt=\"bounce\"/>\r\n                        <p className='name-file'>{state.name}</p>\r\n                    </div>\r\n                    }\r\n                </div>\r\n            )\r\n        };\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <form className='formLoad'>\r\n                    <InputField\r\n                        state={this.state.invoice}\r\n                        label='Upload the Invoice here'\r\n                        name='invoice'\r\n                        id='raised-button-invoice'/>\r\n                    <InputField\r\n                        state={this.state.sheet}\r\n                        label='Upload the Sheet here'\r\n                        name='sheet'\r\n                        id='raised-button-file'/>\r\n                </form>\r\n                <button className='myButton' onClick={this.handleSubmit}>Show Result</button>\r\n                {this.state.loading && <PulseLoader\r\n                    css={{\r\n                        display: 'block',\r\n                        margin: ' 0 auto',\r\n                        borderColor: 'red',\r\n                    }}\r\n                    sizeUnit={\"px\"}\r\n                    size={20}\r\n                    color={'aquamarine'}\r\n                    loading={this.state.loading}\r\n\r\n                />}\r\n                {\r\n                    this.state.invoiceIps &&\r\n                    this.state.sheets &&\r\n                    !this.state.loading && <NewSheet sheet={this.state.sheets.ips} repited={this.state.sheets.repeatingIps} invoice={this.state.invoiceIps}/>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}